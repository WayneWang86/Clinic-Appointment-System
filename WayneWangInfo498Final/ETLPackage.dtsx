<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/20/2019 3:16:29 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-OC7UQQK"
  DTS:CreatorName="DESKTOP-OC7UQQK\Wayne"
  DTS:DTSID="{58FAD71F-FCE0-4D16-874E-526CA9F48DB1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="1033"
  DTS:ObjectName="ETLPackage"
  DTS:PackageType="5"
  DTS:VersionBuild="5"
  DTS:VersionGUID="{9F6015CA-3258-4014-8331-2F956DF7BBA8}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.DWClinicReportData]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{470240CF-1150-41E6-87A3-12118C7D852E}"
      DTS:ObjectName="localhost.DWClinicReportData">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=DWClinicReportData;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.Patients]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{22EEFB06-CB04-4BE5-985F-09AB5C8B40F3}"
      DTS:ObjectName="localhost.Patients">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=Patients;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[localhost.tempdb]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{7974B378-6227-406A-A615-ADD8B1E6A8BC}"
      DTS:ObjectName="localhost.tempdb">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=localhost;Initial Catalog=tempdb;Provider=SQLNCLI11.1;Integrated Security=SSPI;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\ETL From Flat Files to Patients DataBase"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{77705FAD-195C-4C53-8579-D9BC195F2D55}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="ETL From Flat Files to Patients DataBase">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{8C88A4A4-9043-45F2-9F63-12CC8A87E3CB}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Import Data From Flat Files To Staging Tables in TempDB">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB\Create pCreateOrTruncateStagingTables"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a procedure to create or truncate the staging tables"
              DTS:DTSID="{819B2F49-3BE4-4915-9590-1059CFD0821F}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create pCreateOrTruncateStagingTables"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7974B378-6227-406A-A615-ADD8B1E6A8BC}"
                  SQLTask:SqlStatementSource="IF (SELECT OBJECT_ID('pCreateOrTruncateStagingTables')) IS NOT NULL &#xA;&#x9;DROP PROCEDURE pCreateOrTruncateStagingTables&#xA;GO&#xA;&#xA;GO&#xA;Create Procedure pCreateOrTruncateStagingTables&#xA;/* Author: Wayne Wang&#xA;** Desc: Flushes all date from the staging tables &#xA;** Change Log: When,Who,What&#xA;** 2019-08-26, Wayne Wang, Created Procedure for Truncating the tables&#xA;*/&#xA;AS&#xA; Begin&#xA;  Declare @RC int = 0;&#xA;  Begin Try&#xA;    -- ETL Processing Code --&#xA;&#x9;SET NOCOUNT ON&#xA;&#xA;&#x9;-- Create or truncate NewBellevueVisitsStaging table --&#xA;&#x9;IF (SELECT OBJECT_ID('NewBellevueVisitsStaging')) IS NOT NULL &#xA;&#x9;&#x9;TRUNCATE TABLE TempDB.dbo.NewBellevueVisitsStaging&#xA;&#x9;ELSE&#xA;&#x9;&#x9;CREATE TABLE TempDB.dbo.NewBellevueVisitsStaging (&#xA;&#x9;&#x9;&#x9;[Time]      varchar(100) NULL&#xA;&#x9;&#x9;   ,[Patient]&#x9;varchar(100) NULL&#xA;&#x9;&#x9;   ,[Doctor]&#x9;varchar(100) NULL&#xA;&#x9;&#x9;   ,[Procedure] varchar(100) NULL&#xA;&#x9;&#x9;   ,[Charge]    varchar(100) NULL&#xA;&#x9;&#x9;)&#x9;&#xA;&#xA;&#x9;-- Create or truncate NewBellevueVisitsStaging table --&#xA;&#x9;IF (SELECT OBJECT_ID('NewKirklandVisitsStaging')) IS NOT NULL &#xA;&#x9;&#x9;TRUNCATE TABLE TempDB.dbo.NewKirklandVisitsStaging&#xA;&#x9;ELSE&#xA;&#x9;&#x9;CREATE TABLE TempDB.dbo.NewKirklandVisitsStaging (&#xA;&#x9;&#x9;&#x9;[Time]      varchar(100) NULL&#xA;&#x9;&#x9;   ,[Patient]&#x9;varchar(100) NULL&#xA;&#x9;&#x9;   ,[Clinic]&#x9;varchar(100) NULL&#xA;&#x9;&#x9;   ,[Doctor]&#x9;varchar(100) NULL&#xA;&#x9;&#x9;   ,[Procedure] varchar(100) NULL&#xA;&#x9;&#x9;   ,[Charge]    varchar(100) NULL&#xA;&#x9;&#x9;)&#xA;    &#xA;&#x9;-- Create or truncate NewBellevueVisitsStaging table --&#xA;&#x9;IF (SELECT OBJECT_ID('NewRedmondVisitsStaging')) IS NOT NULL &#xA;&#x9;&#x9;TRUNCATE TABLE TempDB.dbo.NewRedmondVisitsStaging&#xA;&#x9;ELSE&#xA;&#x9;&#x9;CREATE TABLE TempDB.dbo.NewRedmondVisitsStaging (&#xA;&#x9;&#x9;&#x9;[Time]      varchar(100) NULL&#xA;&#x9;&#x9;   ,[Clinic]&#x9;varchar(100) NULL&#xA;&#x9;&#x9;   ,[Patient]&#x9;varchar(100) NULL&#xA;&#x9;&#x9;   ,[Doctor]&#x9;varchar(100) NULL&#xA;&#x9;&#x9;   ,[Procedure] varchar(100) NULL&#xA;&#x9;&#x9;   ,[Charge]    varchar(100) NULL&#xA;&#x9;&#x9;)&#xA;&#xA;   Set @RC = +1&#xA;  End Try&#xA;  Begin Catch&#xA;   Print Error_Message()&#xA;   Set @RC = -1&#xA;  End Catch&#xA;  Return @RC;&#xA; End&#xA;go" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB\Create pETLCsvToStagingTables"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a procedure to import data from CSV file to the Staging Tables"
              DTS:DTSID="{1B6EB772-CCB5-47D4-A02A-D0FEEAB2EDDF}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create pETLCsvToStagingTables"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7974B378-6227-406A-A615-ADD8B1E6A8BC}"
                  SQLTask:SqlStatementSource="IF (SELECT OBJECT_ID('pETLCsvToStagingTables')) IS NOT NULL &#xA;&#x9;DROP PROCEDURE pETLCsvToStagingTables&#xA;GO&#xA;-- Write a stored procedure to import the updated files into corresponding staging tables&#xA;GO&#xA;Create Procedure pETLCsvToStagingTables&#xA;/* Author: Wayne Wang&#xA;** Desc: Update the three staging tables with the imported csv files.&#xA;** Change Log: When,Who,What&#xA;** 2019-08-26, Wayne Wang,Created Sproc.&#xA;*/&#xA;AS&#xA; Begin&#xA;  Declare @RC int = 0;&#xA;  Begin Try&#xA;    -- ETL Processing Code --&#xA;&#x9;BULK INSERT TempDB.dbo.NewBellevueVisitsStaging&#xA;&#x9;FROM&#x9;&#x9;'C:\DataFiles\Bellevue\20100102Visits.csv'&#xA;&#x9;WITH&#x9;&#x9;(FIELDTERMINATOR = ',', ROWTERMINATOR = '\n', FIRSTROW = 2)&#xA;&#xA;&#x9;BULK INSERT TempDB.dbo.NewKirklandVisitsStaging&#xA;&#x9;FROM&#x9;&#x9;'C:\DataFiles\Kirkland\20100102Visits.csv'&#xA;&#x9;WITH&#x9;&#x9;(FIELDTERMINATOR = ',', ROWTERMINATOR = '\n', FIRSTROW = 2)&#xA;&#xA;&#x9;&#x9;BULK INSERT TempDB.dbo.NewRedmondVisitsStaging&#xA;&#x9;FROM&#x9;&#x9;'C:\DataFiles\Redmond\20100102Visits.csv'&#xA;&#x9;WITH&#x9;&#x9;(FIELDTERMINATOR = ',', ROWTERMINATOR = '\n', FIRSTROW = 2)&#xA;   Set @RC = +1&#xA;  End Try&#xA;  Begin Catch&#xA;   Print Error_Message()&#xA;   Set @RC = -1&#xA;  End Catch&#xA;  Return @RC;&#xA; End&#xA;go&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB\Execute  pCreateOrTruncateStagingTables"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{7EF624C9-72A6-4D7D-96E0-B908CB48CD2C}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Execute  pCreateOrTruncateStagingTables"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7974B378-6227-406A-A615-ADD8B1E6A8BC}"
                  SQLTask:SqlStatementSource="Exec pCreateOrTruncateStagingTables" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB\Execute pETLCsvToStagingTables"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{77EB8049-94B5-454C-AA31-C84849591ED7}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Execute pETLCsvToStagingTables"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{7974B378-6227-406A-A615-ADD8B1E6A8BC}"
                  SQLTask:SqlStatementSource="Exec pETLCsvToStagingTables" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{D406267B-5294-4EDE-AF45-93E5061F034A}"
              DTS:From="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB\Create pCreateOrTruncateStagingTables"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB\Execute  pCreateOrTruncateStagingTables" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{A774F228-A2DF-4789-B8BD-F03A9DFF766F}"
              DTS:From="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB\Execute  pCreateOrTruncateStagingTables"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB\Create pETLCsvToStagingTables" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{97355029-1BB7-4594-AAAF-AA7086B3F25F}"
              DTS:From="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB\Create pETLCsvToStagingTables"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB\Execute pETLCsvToStagingTables" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{6E93A8A9-34B3-4952-9ECB-ACAB2BC18CDF}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Import Data From Staging Tables to Patients Database">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database\Create  vETLNewVisits"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a View to store the data from staging tables"
              DTS:DTSID="{10D5DE46-2EE4-453A-A33A-88BDDAD1AB7B}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create  vETLNewVisits"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{22EEFB06-CB04-4BE5-985F-09AB5C8B40F3}"
                  SQLTask:SqlStatementSource="IF (SELECT OBJECT_ID('vETLNewVisits')) IS NOT NULL &#xA;&#x9;DROP VIEW vETLNewVisits&#xA;GO&#xA;&#xA;CREATE VIEW vETLNewVisits&#xA;AS&#xA;&#x9;SELECT [Time], [Clinic] = 1, [Patient], [Doctor], [Procedure], [Charge]&#xA;&#x9;FROM   TempDB.dbo.NewBellevueVisitsStaging&#xA;&#x9;UNION ALL&#xA;&#x9;SELECT [Time], [Clinic], [Patient], [Doctor], [Procedure], [Charge]&#xA;&#x9;FROM   TempDB.dbo.NewKirklandVisitsStaging&#xA;&#x9;UNION ALL&#xA;&#x9;SELECT [Time], [Clinic], [Patient], [Doctor], [Procedure], [Charge]&#xA;&#x9;FROM   TempDB.dbo.NewRedmondVisitsStaging&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database\Create pETLSyncPatientNewVisits"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a procedure to perform the ETL task"
              DTS:DTSID="{9AE867BA-2982-4024-81E4-000AA0535AB8}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create pETLSyncPatientNewVisits"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{22EEFB06-CB04-4BE5-985F-09AB5C8B40F3}"
                  SQLTask:SqlStatementSource="IF (SELECT OBJECT_ID('pETLSyncPatientNewVisits')) IS NOT NULL &#xA;&#x9;DROP Procedure pETLSyncPatientNewVisits&#xA;GO&#xA;&#xA;Create Procedure pETLSyncPatientNewVisits&#xA;/* Author: Wayne Wang&#xA;** Desc: Incremental ETL process from the view&#xA;** Change Log: When,Who,What&#xA;** 2019-08-08, Wayne Wang, Created Sproc.&#xA;*/&#xA;AS&#xA; Begin&#xA;  Declare @RC int = 0;&#xA;  Begin Try&#xA;    -- ETL Processing Code --&#xA;&#x9;&#x9;With NewVisits &#xA;&#x9;&#x9;As (&#xA;&#x9;&#x9;&#x9;Select   [Date]      = CAST(CONCAT('2010-01-02 ', CAST([time] as varchar(50))) as datetime)&#xA;&#x9;&#x9;&#x9;&#x9;    ,[Clinic]    = CASE CAST([Clinic] as int) WHEN 1 THEN 100 WHEN 2 THEN 200 WHEN 3 THEN 300 END&#xA;&#x9;&#x9;&#x9;&#x9;    ,[Patient]   = CAST([Patient] as int)&#xA;&#x9;&#x9;&#x9;&#x9;    ,[Doctor]    = CAST([Doctor] as int)&#xA;&#x9;&#x9;&#x9;&#x9;    ,[Procedure] = CAST([Procedure] as int) &#xA;&#x9;&#x9;&#x9;&#x9;    ,[Charge]    = CAST([Charge] as money)&#xA;&#x9;&#x9;&#x9;From     [dbo].[vETLNewVisits]&#xA;&#x9;&#x9;&#x9;Except&#xA;&#x9;&#x9;&#x9;Select   [Date], [Clinic], [Patient], [Doctor], [Procedure], [Charge] &#xA;&#x9;&#x9;&#x9;From     [Patients].[dbo].[Visits]&#xA;&#x9;&#x9;) &#xA;&#x9;&#x9;&#x9;INSERT   [Patients].[dbo].[Visits]&#xA;&#x9;&#x9;&#x9;&#x9;     ([Date], [Clinic], [Patient], [Doctor], [Procedure], [Charge])&#xA;&#x9;&#x9;    SELECT   [Date], [Clinic], [Patient], [Doctor], [Procedure], [Charge]&#xA;&#x9;&#x9;&#x9;FROM     NewVisits&#xA;&#x9;&#x9;&#x9;ORDER BY 1,2,3,4,5,6&#xA;&#x9;&#x9;;&#xA;   Set @RC = +1&#xA;  End Try&#xA;  Begin Catch&#xA;   Print Error_Message()&#xA;   Set @RC = -1&#xA;  End Catch&#xA;  Return @RC;&#xA; End&#xA;go" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database\Exec pETLSyncPatientNewVisits"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{195107AD-7A0A-4727-8FBB-E6E5FF1F791E}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Exec pETLSyncPatientNewVisits"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{22EEFB06-CB04-4BE5-985F-09AB5C8B40F3}"
                  SQLTask:SqlStatementSource="Exec  pETLSyncPatientNewVisits" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{5EBD8B69-DF6F-41AB-95AF-3B7F5870D3A1}"
              DTS:From="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database\Create  vETLNewVisits"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database\Create pETLSyncPatientNewVisits" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{CD09E46C-9BA5-4091-B9A4-6EB7CC9B7A56}"
              DTS:From="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database\Create pETLSyncPatientNewVisits"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database\Exec pETLSyncPatientNewVisits" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\ETL From Flat Files to Patients DataBase.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{52542671-53E0-426E-A28B-5948A30E5F5F}"
          DTS:From="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ETL From OLTP Databases to DW Database"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{DAE48AA0-5BB3-46F5-AB88-E2F872940BFB}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="ETL From OLTP Databases to DW Database">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\ETL From OLTP Databases to DW Database\Drop Foreign Key Constraints in Fact Tables"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{05267234-ECFC-42C3-9C60-B0EBC0359C60}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Drop Foreign Key Constraints in Fact Tables">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Drop Foreign Key Constraints in Fact Tables\Create pETLDropForeignKeyConstraints"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a procedure to drop all foreign key constraints"
              DTS:DTSID="{6009372F-4C1D-4A2F-B082-BF9C5AF72360}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create pETLDropForeignKeyConstraints"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'pETLDropForeignKeyConstraints')&#xA;   Drop Procedure pETLDropForeignKeyConstraints;&#xA;go&#xA;&#xA;Create Procedure pETLDropForeignKeyConstraints&#xA;/* Author: Wayne Wang&#xA;** Desc: Removed FKs before truncation of the tables&#xA;** Change Log: When,Who,What&#xA;** 2019-08-26, Wayne Wang, Created Procedure for Droping Foreign Key Constraints.&#xA;*/&#xA;AS&#xA; Begin&#xA;  Declare @RC int = 0;&#xA;  Begin Try&#xA;    -- ETL Processing Code --&#xA;&#x9;-- Drop the Foreign Key Constraints from FactDoctorShifts Table --&#xA;    Alter Table DWClinicReportData.dbo.FactDoctorShifts&#xA;&#x9;&#x9;Drop Constraint fkFactDoctorShiftsToDimDates;&#xA;&#xA;&#x9;Alter Table DWClinicReportData.dbo.FactDoctorShifts&#xA;&#x9;&#x9;Drop Constraint fkFactDoctorShiftsToDimClinics;&#xA;&#xA;&#x9;Alter Table DWClinicReportData.dbo.FactDoctorShifts&#xA;&#x9;&#x9;Drop Constraint fkFactDoctorShiftsToDimShifts;&#xA;&#xA;&#x9;Alter Table DWClinicReportData.dbo.FactDoctorShifts&#xA;&#x9;&#x9;Drop Constraint fkFactDoctorShiftsToDimDoctors;&#xA;&#x9;&#xA;&#x9;-- Drop the Foreign Key Constraints from FactVisits Table --&#xA;&#x9;Alter Table DWClinicReportData.dbo.FactVisits&#xA;&#x9;&#x9;Drop Constraint fkFactVisitsToDimDates;&#xA;&#xA;&#x9;Alter Table DWClinicReportData.dbo.FactVisits&#xA;&#x9;&#x9;Drop Constraint fkFactVisitsToDimClinics;&#xA;&#xA;&#x9;Alter Table DWClinicReportData.dbo.FactVisits&#xA;&#x9;&#x9;Drop Constraint fkFactVisitsToDimPatients;&#xA;&#xA;&#x9;Alter Table DWClinicReportData.dbo.FactVisits&#xA;&#x9;&#x9;Drop Constraint fkFactVisitsToDimDoctors;&#xA;&#xA;&#x9;Alter Table DWClinicReportData.dbo.FactVisits&#xA;&#x9;&#x9;Drop Constraint fkFactVisitsToDimProcedures;&#xA;   Set @RC = +1&#xA;  End Try&#xA;  Begin Catch&#xA;   Print Error_Message()&#xA;   Set @RC = -1&#xA;  End Catch&#xA;  Return @RC;&#xA; End&#xA;go" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Drop Foreign Key Constraints in Fact Tables\Exec pETLDropForeignKeyConstraints"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{86497E8C-B7EB-4E1E-9E2F-6806D0190C28}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Exec pETLDropForeignKeyConstraints"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="Exec pETLDropForeignKeyConstraints" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Drop Foreign Key Constraints in Fact Tables.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{EA93AAB2-D9C2-4BA5-A8DD-6E01722CB6C6}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Drop Foreign Key Constraints in Fact Tables\Create pETLDropForeignKeyConstraints"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Drop Foreign Key Constraints in Fact Tables\Exec pETLDropForeignKeyConstraints" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill)"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{15029BCF-A3DF-44B4-8929-ABA72FB31E0F}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fill Dimension Clinics Table (Flush and Fill)">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill)\Create pETLFillDimClinics"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a procedure to fill the dimension Clinics Table"
              DTS:DTSID="{E726E37D-1039-40C2-808E-1A45F5CD897C}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create pETLFillDimClinics"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'pETLFillDimClinics')&#xA;   Drop Procedure pETLFillDimClinics;&#xA;go&#xA;&#xA;Create Procedure pETLFillDimClinics&#xA;/* Author: Wayne Wang&#xA;** Desc: Inserts data into DimClinics&#xA;** Change Log: When,Who,What&#xA;** 2019-08-26,Wayne Wang, Created Procedure for ETL process for DimClinics table&#xA;*/&#xA;AS&#xA; Begin&#xA;  Declare @RC int = 0;&#xA;  Begin Try&#xA;    -- ETL Processing Code --&#xA;     IF ((Select Count(*) From DimClinics) = 0)&#xA;     Begin&#xA;&#x9;&#x9;INSERT INTO DWClinicReportData.dbo.DimClinics&#xA;&#x9;&#x9;   ([ClinicID], [ClinicName], [ClinicCity], [ClinicState], [ClinicZip])&#xA;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;[ClinicID], [ClinicName], [ClinicCity], [ClinicState], [ClinicZip]&#xA;&#x9;&#x9; FROM vETLDimClinics&#xA;&#x9; End&#xA;   Set @RC = +1&#xA;  End Try&#xA;  Begin Catch&#xA;   Print Error_Message()&#xA;   Set @RC = -1&#xA;  End Catch&#xA;  Return @RC;&#xA; End&#xA;go" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill)\Create vETLDimClinics"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a abstract layer for DimClinics"
              DTS:DTSID="{0D2E329D-F8F3-47EA-A53B-2035733303E0}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create vETLDimClinics"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'vETLDimClinics')&#xA;   Drop View vETLDimClinics;&#xA;go&#xA;&#xA;CREATE VIEW vETLDimClinics&#xA;AS&#xA;&#x9;SELECT [ClinicID]    = CASE [ClinicID] WHEN 1 THEN 100 WHEN 2 THEN 200 WHEN 3 THEN 300 END&#xA;&#x9;&#x9;  ,[ClinicName]  = [ClinicName]&#xA;&#x9;&#x9;  ,[ClinicCity]  = [City]&#xA;&#x9;&#x9;  ,[ClinicState] = [State]&#xA;&#x9;&#x9;  ,[ClinicZip]   = [Zip]&#xA;&#x9;FROM   DoctorsSchedules.dbo.Clinics&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill)\Exec pETLFillDimClinics"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{E585580E-8695-47F7-81E3-DB6C21FF2C2F}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Exec pETLFillDimClinics"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="EXEC pETLFillDimClinics" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill).PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{78BB8C8E-DDAC-4548-9FB3-D7CF258F0B1E}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill)\Create vETLDimClinics"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill)\Create pETLFillDimClinics" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill).PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{84086024-2733-4F5C-8E7B-FB752A809DD5}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill)\Create pETLFillDimClinics"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill)\Exec pETLFillDimClinics" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Date Table (Flush and Fill)"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{E8E5BF22-0823-4203-B54A-F453E8C761B0}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fill Dimension Date Table (Flush and Fill)">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Date Table (Flush and Fill)\Create pETLFillDimDates"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a procedure to fill the Dimension Date Table"
              DTS:DTSID="{AB3FD8A6-DF3F-41D8-BD84-3A6BEECDE30B}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create pETLFillDimDates"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'pETLFillDimDates')&#xA;   Drop Procedure pETLFillDimDates;&#xA;go&#xA;&#xA;Create Procedure pETLFillDimDates&#xA;/* Author: Wayne Wang&#xA;** Desc: Inserts data into DimDates&#xA;** Change Log: When,Who,What&#xA;** 2019-08-26, Wayng Wang, Created Sproc.&#xA;*/&#xA;AS&#xA; Begin&#xA;  Declare @RC int = 0;&#xA;  Begin Try&#xA;    -- ETL Processing Code --&#xA;      Delete From DimDates; -- Clears table data with the need for dropping FKs&#xA;      Declare @StartDate datetime = '01/01/2004'&#xA;      Declare @EndDate datetime = '12/31/2020' &#xA;      Declare @DateInProcess datetime  = @StartDate&#xA;      -- Loop through the dates until you reach the end date&#xA;      While @DateInProcess &lt;= @EndDate&#xA;       Begin&#xA;       -- Add a row into the date dimension table for this date&#xA;&#x9;   SET IDENTITY_INSERT DimDates ON&#xA;       Insert Into DimDates &#xA;       ([DateKey], [FullDate], [FullDateName], [MonthID], [MonthName], [YearID], [YearName] )&#xA;       Values ( &#xA;        Cast(Convert(nVarchar(50), @DateInProcess, 112) as int) -- [DateKey]&#xA;&#x9;&#x9;,@DateInProcess -- [FullDate]&#xA;        ,DateName(weekday, @DateInProcess) + ', ' + Convert(nVarchar(50), @DateInProcess, 110) -- [FullDateName]  &#xA;        ,Cast(Left(Convert(nVarchar(50), @DateInProcess, 112), 6) as int)  -- [MonthID]&#xA;        ,DateName(month, @DateInProcess) + ' - ' + DateName(YYYY,@DateInProcess) -- [MonthName]&#xA;        ,Year(@DateInProcess) -- [YearID] &#xA;        ,Cast(Year(@DateInProcess ) as nVarchar(50)) -- [YearName] &#xA;        )  &#xA;       -- Add a day and loop again&#xA;       Set @DateInProcess = DateAdd(d, 1, @DateInProcess)&#xA;       End&#xA;&#x9;  SET IDENTITY_INSERT DimDates OFF&#xA;   Set @RC = +1&#xA;  End Try&#xA;  Begin Catch&#xA;   Print Error_Message()&#xA;   Set @RC = -1&#xA;  End Catch&#xA;  Return @RC;&#xA; End&#xA;go&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Date Table (Flush and Fill)\Exec pETLFillDimDates"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Exec pETLFillDimDates"
              DTS:DTSID="{76AC3027-6DAC-45DD-B560-4871EFD42CE5}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Exec pETLFillDimDates"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="EXEC pETLFillDimDates" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Date Table (Flush and Fill).PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{60B1BD89-F962-4342-98E3-DDBD7A0E5DE2}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Date Table (Flush and Fill)\Create pETLFillDimDates"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Date Table (Flush and Fill)\Exec pETLFillDimDates" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill)"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{F79FE045-DBA5-47DA-B963-5B67714E95F5}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fill Dimension Doctor Table (Flush and Fill)">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill)\Create pETLFillDimDoctors"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a Procedure to Fill DimDoctors table"
              DTS:DTSID="{03AD966B-E72F-465D-9C47-B839FA667680}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create pETLFillDimDoctors"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'pETLFillDimDoctors')&#xA;   Drop Procedure pETLFillDimDoctors;&#xA;go&#xA;&#xA;Create Procedure pETLFillDimDoctors&#xA;/* Author: Wayne Wang&#xA;** Desc: Inserts data into DimDoctors&#xA;** Change Log: When,Who,What&#xA;** 2019-08-26,Wayne Wang, Created Procedure for filling the DimDoctors table&#xA;*/&#xA;AS&#xA; Begin&#xA;  Declare @RC int = 0;&#xA;  Begin Try&#xA;    -- ETL Processing Code --&#xA;    INSERT INTO DimDoctors &#xA;&#x9;&#x9;  ([DoctorID], [DoctorFullName], [DoctorEmailAddress], [DoctorCity], [DoctorState], [DoctorZip])&#xA;    Select [DoctorID], [DoctorFullName], [DoctorEmailAddress], [DoctorCity], [DoctorState], [DoctorZip]&#xA;&#x9;FROM   vETLDimDoctors&#xA;   Set @RC = +1&#xA;  End Try&#xA;  Begin Catch&#xA;   Print Error_Message()&#xA;   Set @RC = -1&#xA;  End Catch&#xA;  Return @RC;&#xA; End&#xA;go" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill)\Create vETLDimDoctors"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create an abstract layer for DimDoctors"
              DTS:DTSID="{B45B751B-E492-4D9C-8EB6-EEE965038946}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create vETLDimDoctors"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'vETLDimDoctors')&#xA;   Drop View vETLDimDoctors;&#xA;go&#xA;&#xA;CREATE VIEW vETLDimDoctors&#xA;AS&#xA;&#x9;SELECT [DoctorID]&#x9;        = [DoctorID]&#xA;&#x9;&#x9;  ,[DoctorFullName]&#x9;&#x9;= CAST(CONCAT([FirstName],  ' ',[LastName]) as nvarchar(200))&#xA;&#x9;&#x9;  ,[DoctorEmailAddress] = [EmailAddress]&#xA;&#x9;&#x9;  ,[DoctorCity]&#x9;&#x9;&#x9;= [City]&#xA;&#x9;&#x9;  ,[DoctorState]&#x9;&#x9;= [State]&#xA;&#x9;&#x9;  ,[DoctorZip]&#x9;&#x9;&#x9;= [Zip]&#xA;&#x9;FROM   DoctorsSchedules.dbo.Doctors&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill)\Exec pETLFillDimDoctors"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{9B0CD9F8-4D3A-48CB-96D1-5D9BA00B319A}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Exec pETLFillDimDoctors"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="Exec pETLFillDimDoctors" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill).PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{E2461E8F-3136-4740-A036-DD7E62EFE279}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill)\Create vETLDimDoctors"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill)\Create pETLFillDimDoctors" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill).PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{F77F9B29-CC51-4736-A80A-8433E0C0880F}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill)\Create pETLFillDimDoctors"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill)\Exec pETLFillDimDoctors" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental)"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{EEC2D816-E449-4A5A-992D-F555975F1E9A}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fill Dimension Patients Table (Incremental)">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental)\Create pETLSyncDimPatients"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a procedure for Incremental ETL to DimPatients"
              DTS:DTSID="{5498B581-3187-4809-9330-641F75682355}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create pETLSyncDimPatients"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'pETLSyncDimPatients')&#xA;   Drop Procedure pETLSyncDimPatients;&#xA;go&#xA;&#xA;Create Procedure pETLSyncDimPatients&#xA;/* Author: Wayne Wang&#xA;** Desc: Updates data in DimPatients using the vETLDimPatients view&#xA;** Change Log: When,Who,What&#xA;** 2019-08-26, Wayne Wang,Created Sproc.&#xA;*/&#xA;AS&#xA; Begin&#xA;  Declare @RC int = 0;&#xA;  Begin Try&#xA;    -- ETL Processing Code --&#xA;    -- 1) For UPDATE: Change the EndDate and IsCurrent on any added rows &#xA;&#x9;With ChangedPatients &#xA;&#x9;&#x9;As(&#xA;&#x9;&#x9;&#x9;Select [PatientID], [PatientFullName], [PatientCity], [PatientState], [PatientZipCode] From vETLDimPatients&#xA;&#x9;&#x9;&#x9;Except&#xA;&#x9;&#x9;&#x9;Select [PatientID], [PatientFullName], [PatientCity], [PatientState], [PatientZipCode] From DimPatients&#xA;&#x9;&#x9;&#x9;Where  [IsCurrent] = 1 -- Needed if the value is changed back to previous value&#xA;&#x9;&#x9;) UPDATE   DWClinicReportData.dbo.DimPatients &#xA;&#x9;&#x9;&#x9;SET    [EndDate] = Cast(GetDate() as date)&#xA;&#x9;&#x9;&#x9;      ,[IsCurrent] = 0&#xA;&#x9;&#x9;&#x9;WHERE  [PatientID] IN (Select [PatientID] From ChangedPatients)&#xA;    ;&#xA;    -- 2)For INSERT or UPDATES: Add new rows to the table&#xA;&#x9;With AddedORChangedPatients &#xA;&#x9;&#x9;As(&#xA;&#x9;&#x9;&#x9;Select [PatientID], [PatientFullName], [PatientCity], [PatientState], [PatientZipCode] From vETLDimPatients&#xA;&#x9;&#x9;&#x9;Except&#xA;&#x9;&#x9;&#x9;Select [PatientID], [PatientFullName], [PatientCity], [PatientState], [PatientZipCode] From DimPatients&#xA;&#x9;&#x9;&#x9;Where  [IsCurrent] = 1 -- Needed if the value is changed back to previous value&#xA;&#x9;&#x9;)&#x9;INSERT INTO DWClinicReportData.dbo.DimPatients&#xA;&#x9;&#x9;&#x9;&#x9;  ([PatientID], [PatientFullName], [PatientCity], [PatientState], [PatientZipCode],[StartDate],[EndDate],[IsCurrent])&#xA;&#x9;&#x9;&#x9;SELECT&#xA;&#x9;&#x9;&#x9;&#x9;   [PatientID]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[PatientFullName]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[PatientCity]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[PatientState]&#xA;&#x9;&#x9;&#x9;&#x9;  ,[PatientZipCode]&#xA;&#x9;&#x9;&#x9;      ,[StartDate] = Cast(GetDate() as date)&#xA;&#x9;&#x9;&#x9;      ,[EndDate] = Null&#xA;&#x9;&#x9;&#x9;      ,[IsCurrent] = 1&#xA;&#x9;&#x9;&#x9;FROM   vETLDimPatients&#xA;&#x9;&#x9;    WHERE  [PatientID] IN (Select [PatientID] From AddedORChangedPatients)&#xA;    ;&#xA;&#xA;    -- 3) For Delete: Change the IsCurrent status to zero&#xA;    With DeletedPatients &#xA;&#x9;&#x9;As (&#xA;&#x9;&#x9;&#x9;Select [PatientID], [PatientFullName], [PatientCity], [PatientState], [PatientZipCode] From DimPatients&#xA;&#x9;&#x9;&#x9;Where  [IsCurrent] = 1 -- We do not care about row already marked zero!&#xA; &#x9;&#x9;&#x9;Except            &#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;Select [PatientID], [PatientFullName], [PatientCity], [PatientState], [PatientZipCode] From vETLDimPatients&#xA;   &#x9;&#x9;)&#x9;UPDATE DWClinicReportData.dbo.DimPatients &#xA;&#x9;&#x9;&#x9;SET    [EndDate] = Cast(GetDate() as date)&#xA;&#x9;&#x9;&#x9;      ,[IsCurrent] = 0&#xA;&#x9;&#x9;&#x9;WHERE  [PatientID] IN (Select [PatientID] From DeletedPatients)&#xA;   ;&#xA;   Set @RC = +1&#xA;  End Try&#xA;  Begin Catch&#xA;   Print Error_Message()&#xA;   Set @RC = -1&#xA;  End Catch&#xA;  Return @RC;&#xA; End&#xA;go" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental)\Create vETLDimPatients"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a abstract Layer for DimPatients "
              DTS:DTSID="{3064148B-FA87-47F2-91E7-67A38BBF69CC}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create vETLDimPatients"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'vETLDimPatients')&#xA;   Drop View vETLDimPatients;&#xA;go&#xA;&#xA;CREATE VIEW vETLDimPatients&#xA;AS&#xA;&#x9;SELECT [PatientID]&#x9;&#x9; = [ID]&#xA;&#x9;&#x9;  ,[PatientFullName] = CAST(CONCAT([Fname],  ' ', [Lname]) as varchar(100))&#xA;&#x9;&#x9;  ,[PatientCity]     = CAST([City] as varchar(100))&#xA;&#x9;&#x9;  ,[PatientState]    = CAST([State] as varchar(100))&#xA;&#x9;&#x9;  ,[PatientZipCode]  = [Zipcode]&#xA;&#x9;FROM   Patients.dbo.Patients&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental)\Exec pETLSyncDimPatients"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{A0A08F75-6429-4A2F-8D9E-9FF750C7544A}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Exec pETLSyncDimPatients"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource=" EXEC pETLSyncDimPatients" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental).PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{FEBAE5AA-AC77-483E-8121-4EBBC3F434F9}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental)\Create vETLDimPatients"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental)\Create pETLSyncDimPatients" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental).PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{E3362AF6-EB86-4B93-8EC2-4CBF786BB0DA}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental)\Create pETLSyncDimPatients"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental)\Exec pETLSyncDimPatients" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill)"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{657EDED2-3F48-40D1-AB59-64B2DED39313}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fill Dimension Procedure Table (Flush and Fill)">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill)\Create pETLFillDimProcedures"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a procedure to Fill DimProcedures Table"
              DTS:DTSID="{F83872D3-D02F-4AC2-BAA7-F7FFBFBEDDDB}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create pETLFillDimProcedures"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'pETLFillDimProcedures')&#xA;   Drop Procedure pETLFillDimProcedures;&#xA;go&#xA;&#xA;Create Procedure pETLFillDimProcedures&#xA;/* Author: Wayne Wang&#xA;** Desc: Inserts data into DimProcedure&#xA;** Change Log: When,Who,What&#xA;** 2019-08-26, Wayne Wang, Created Procedure for filling the DimProcedure table&#xA;*/&#xA;AS&#xA; Begin&#xA;  Declare @RC int = 0;&#xA;  Begin Try&#xA;    -- ETL Processing Code --&#xA;    INSERT INTO DimProcedures &#xA;&#x9;&#x9;  ([ProcedureID], [ProcedureName], [ProcedureDesc], [ProcedureCharge])&#xA;    Select [ProcedureID], [ProcedureName], [ProcedureDesc], [ProcedureCharge]&#xA;&#x9;FROM   vETLDimProcedures&#xA;   Set @RC = +1&#xA;  End Try&#xA;  Begin Catch&#xA;   Print Error_Message()&#xA;   Set @RC = -1&#xA;  End Catch&#xA;  Return @RC;&#xA; End&#xA;go" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill)\Create vETLDimProcedures"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create an abstract layer for DimProcedures"
              DTS:DTSID="{99201E9A-348F-4F26-A0F8-8321B1C79FD7}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create vETLDimProcedures"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'vETLDimProcedures')&#xA;   Drop View vETLDimProcedures;&#xA;go&#xA;&#xA;CREATE VIEW vETLDimProcedures&#xA;AS&#xA;&#x9;SELECT [ProcedureID]     = [ID]&#xA;&#x9;&#x9;  ,[ProcedureName]   = [Name]&#xA;&#x9;&#x9;  ,[ProcedureDesc]   = [Desc]&#xA;&#x9;&#x9;  ,[ProcedureCharge] = CAST([Charge] as MONEY)&#xA;&#x9;FROM   Patients.dbo.Procedures&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill)\Exec pETLFillDimProcedures"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1CD7D35B-F9E3-49FC-AE91-57426214950B}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Exec pETLFillDimProcedures"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="EXEC pETLFillDimProcedures" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill).PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{4F4D4572-1E6E-4B34-B8CA-BFA61BE5E6D9}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill)\Create vETLDimProcedures"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill)\Create pETLFillDimProcedures" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill).PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{3FA48A9B-5016-4F76-9065-51979600840A}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill)\Create pETLFillDimProcedures"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill)\Exec pETLFillDimProcedures" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill)"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{CD3B3CE7-C33B-4901-99BA-345A254CBD49}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fill Dimension Shift Table (Flush and Fill)">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill)\Create  pETLFillDimShifts"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a procedure to Fill DimShifts Table"
              DTS:DTSID="{4B0B15BE-2CDF-40EA-9D2A-926C82611A29}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create  pETLFillDimShifts"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'pETLFillDimShifts')&#xA;   Drop Procedure pETLFillDimShifts;&#xA;go&#xA;&#xA;Create Procedure pETLFillDimShifts&#xA;/* Author: Wayne Wang&#xA;** Desc: Inserts data into DimShifts&#xA;** Change Log: When,Who,What&#xA;** 2019-08-26, Wayne Wang, Created Procedure for filling the DimShifts table&#xA;*/&#xA;AS&#xA; Begin&#xA;  Declare @RC int = 0;&#xA;  Begin Try&#xA;    -- ETL Processing Code --&#xA;    INSERT INTO DimShifts &#xA;&#x9;&#x9;  ([ShiftID], [ShiftStart], [ShiftEnd])&#xA;    Select [ShiftID], [ShiftStart], [ShiftEnd]&#xA;&#x9;FROM  vETLDimShifts&#xA;   Set @RC = +1&#xA;  End Try&#xA;  Begin Catch&#xA;   Print Error_Message()&#xA;   Set @RC = -1&#xA;  End Catch&#xA;  Return @RC;&#xA; End&#xA;go" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill)\Create vETLDimShifts"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create an abstract Layer for DimShifts Table"
              DTS:DTSID="{641A358B-6814-4C39-9EE8-25485437B381}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create vETLDimShifts"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'vETLDimShifts')&#xA;   Drop View vETLDimShifts;&#xA;go&#xA;&#xA;CREATE VIEW vETLDimShifts&#xA;AS&#xA;&#x9;SELECT [ShiftID]    = [ShiftID]&#xA;&#x9;&#x9;  ,[ShiftStart] = CASE [ShiftStart] &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN '09:00:00' THEN CAST('09:00:00' as time(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN '01:00:00' THEN CAST('13:00:00' as time(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN '21:00:00' THEN CAST('21:00:00' as time(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  END&#xA;&#x9;&#x9;  ,[ShiftEnd]   = CASE [ShiftEnd]  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN '05:00:00' THEN CAST('17:00:00' as time(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN '21:00:00' THEN CAST('21:00:00' as time(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN '09:00:00' THEN CAST('09:00:00' as time(0))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;  END&#xA;&#x9;FROM   DoctorsSchedules.dbo.Shifts&#xA;GO&#xA;&#xA;If Exists(Select * from Sys.objects where Name = 'pETLFillDimShifts')&#xA;   Drop Procedure pETLFillDimShifts;&#xA;go" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill)\Exec pETLFillDimShifts"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{EB11EE69-1980-4240-AEF1-0DBCBBDC9112}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Exec pETLFillDimShifts"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="EXEC pETLFillDimShifts" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill).PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{B455BBCD-E65D-4997-B569-C34F5AAD789F}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill)\Create vETLDimShifts"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill)\Create  pETLFillDimShifts" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill).PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{512B1314-D94C-4432-A9C2-D73FEB04EC1A}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill)\Create  pETLFillDimShifts"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill)\Exec pETLFillDimShifts" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill)"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{182DB7F2-CC75-4CC1-9411-3975FC452E9D}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fill Fact DoctorShift Table (Flush and Fill)">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill)\Create pETLFillFactDoctorShifts"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a procedure to Fill FactDoctorShifts table"
              DTS:DTSID="{5C854FA2-76D3-4458-AF34-CEB6DA89008C}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create pETLFillFactDoctorShifts"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'pETLFillFactDoctorShifts')&#xA;   Drop Procedure pETLFillFactDoctorShifts;&#xA;go&#xA;&#xA;Create Procedure pETLFillFactDoctorShifts&#xA;/* Author: Wayne Wang&#xA;** Desc: Inserts data into FactDoctorShifts&#xA;** Change Log: When,Who,What&#xA;** 2019-08-26, Wayne Wang, Created Procedure for filling the FactDoctorShifts table&#xA;*/&#xA;AS&#xA; Begin&#xA;  Declare @RC int = 0;&#xA;  Begin Try&#xA;    -- ETL Processing Code --&#xA;    INSERT INTO FactDoctorShifts &#xA;&#x9;&#x9;  ([DoctorsShiftID], [ShiftDateKey], [ClinicKey], [ShiftKey], [DoctorKey], [HoursWorked])&#xA;    Select [DoctorsShiftID], [ShiftDateKey], [ClinicKey], [ShiftKey], [DoctorKey], [HoursWorked]&#xA;&#x9;FROM  vETLFactDoctorShifts&#xA;   Set @RC = +1&#xA;  End Try&#xA;  Begin Catch&#xA;   Print Error_Message()&#xA;   Set @RC = -1&#xA;  End Catch&#xA;  Return @RC;&#xA; End&#xA;go&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill)\Create vETLFactDoctorShifts"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create an abstract Layer for FactDoctorShifts table"
              DTS:DTSID="{44A4B789-4FA8-452E-B7E2-35FFBA57826E}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create vETLFactDoctorShifts"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'vETLFactDoctorShifts')&#xA;   Drop View vETLFactDoctorShifts;&#xA;go&#xA;&#xA;CREATE VIEW vETLFactDoctorShifts&#xA;AS &#xA;&#x9;SELECT [DoctorsShiftID] = DS.DoctorsShiftID&#xA;&#x9;&#x9;  ,[ShiftDateKey]   = DD.DateKey&#xA;&#x9;&#x9;  ,[ClinicKey]&#x9;&#x9;= C.ClinicKey&#xA;&#x9;&#x9;  ,[ShiftKey]&#x9;&#x9;= S.ShiftKey&#xA;&#x9;&#x9;  ,[DoctorKey]&#x9;    = D.DoctorKey&#xA;&#x9;&#x9;  ,[HoursWorked]&#x9;= ABS(DATEDIFF(hh, S.ShiftStart, S.ShiftEnd))&#xA;&#x9;FROM   DoctorsSchedules.dbo.DoctorShifts AS DS&#xA;&#x9;JOIN   DimDates&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;     AS DD&#xA;&#x9;ON     CAST(CONVERT(NVARCHAR(50), DS.ShiftDate, 112) as int) = DD.DateKey&#xA;&#x9;JOIN   DimClinics&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; AS C&#xA;&#x9;ON&#x9;   C.ClinicID = DS.ClinicID&#xA;&#x9;JOIN   DimShifts                         AS S&#xA;&#x9;ON&#x9;   S.ShiftID  = DS.ShiftID&#xA;&#x9;JOIN   DimDoctors&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; AS D&#xA;&#x9;ON&#x9;   D.DoctorID = DS.DoctorID&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill)\Exec pETLFillFactDoctorShifts"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{18D6B100-8225-4F4A-9306-0F6AA55F0580}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Exec pETLFillFactDoctorShifts"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="EXEC pETLFillFactDoctorShifts" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill).PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{E7EFE95D-BBDE-4E42-B7DB-1A42B1565936}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill)\Create vETLFactDoctorShifts"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill)\Create pETLFillFactDoctorShifts" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill).PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{898B3E9C-B115-4984-B2F2-AE5AB9E06B93}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill)\Create pETLFillFactDoctorShifts"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill)\Exec pETLFillFactDoctorShifts" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill)"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{BDDDBD19-B7F7-4E17-B8D7-34889B4BA46C}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Fill Fact Visits Table (Flush and Fill)">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill)\Create pETLFillFactVisits"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a procedure to Fill FactVisits Table"
              DTS:DTSID="{B87EC1AE-4D43-40F8-AED7-EA67F4754834}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create pETLFillFactVisits"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'pETLFillFactVisits')&#xA;   Drop Procedure pETLFillFactVisits;&#xA;go&#xA;&#xA;Create Procedure pETLFillFactVisits&#xA;/* Author: Wayne Wang&#xA;** Desc: Inserts data into FactVisits&#xA;** Change Log: When,Who,What&#xA;** 2019-08-26, Wayne Wang, Created Procedure for filling the FactVisits table&#xA;*/&#xA;AS&#xA; Begin&#xA;  Declare @RC int = 0;&#xA;  Begin Try&#xA;    -- ETL Processing Code --&#xA;    INSERT INTO FactVisits &#xA;&#x9;&#x9;  ([VisitKey], [DateKey], [ClinicKey], [PatientKey], [DoctorKey], [ProcedureKey], [ProcedureVistCharge])&#xA;    Select [VisitKey], [DateKey], [ClinicKey], [PatientKey], [DoctorKey], [ProcedureKey], [ProcedureVistCharge]&#xA;&#x9;FROM   vETLFactVisits&#xA;   Set @RC = +1&#xA;  End Try&#xA;  Begin Catch&#xA;   Print Error_Message()&#xA;   Set @RC = -1&#xA;  End Catch&#xA;  Return @RC;&#xA; End&#xA;go" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill)\Create vETLFactVisits"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Craete an abstract layer for FactVisits"
              DTS:DTSID="{EC760FCD-FEDA-4E66-9F6B-BCB26225D1A4}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create vETLFactVisits"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'vETLFactVisits')&#xA;   Drop View vETLFactVisits;&#xA;go&#xA;&#xA;CREATE VIEW vETLFactVisits&#xA;AS&#xA;&#x9;SELECT [VisitKey]            = V.ID&#xA;&#x9;&#x9;  ,[DateKey]&#x9;&#x9;&#x9; = D.DateKey&#xA;&#x9;&#x9;  ,[ClinicKey]&#x9;&#x9;&#x9; = C.ClinicKey&#xA;&#x9;&#x9;  ,[PatientKey]&#x9;&#x9;&#x9; = P.PatientKey&#xA;&#x9;&#x9;  ,[DoctorKey]&#x9;&#x9;&#x9; = ISNULL(DC.DoctorKey, -1)&#xA;&#x9;&#x9;  ,[ProcedureKey]&#x9;&#x9; = PC.ProcedureKey&#xA;&#x9;&#x9;  ,[ProcedureVistCharge] = PC.ProcedureCharge&#xA;&#x9;FROM   Patients.dbo.Visits   AS  V&#xA;&#x9;JOIN   DimDates&#x9;&#x9;&#x9;&#x9; AS  D&#xA;&#x9;ON&#x9;   CONVERT(DATE, D.FullDate)  = CONVERT(DATE, V.[Date])&#xA;&#x9;JOIN   DimClinics&#x9;&#x9;&#x9; AS  C&#xA;&#x9;ON&#x9;   C.ClinicID  = V.Clinic&#xA;&#x9;JOIN   DimPatients&#x9;&#x9;&#x9; AS  P&#xA;&#x9;ON&#x9;   P.PatientID = V.Patient&#xA;&#x9;LEFT OUTER JOIN   DimDoctors&#x9;&#x9;&#x9; AS  DC&#xA;&#x9;ON&#x9;   DC.DoctorID = V.Doctor&#xA;&#x9;JOIN   DimProcedures         AS  PC&#xA;&#x9;ON&#x9;   PC.ProcedureID = V.[Procedure]&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill)\Exec pETLFillFactVisits"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{0B2C0F10-16CB-4FCF-ADD1-B8E452491355}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Exec pETLFillFactVisits"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="EXEC pETLFillFactVisits" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill).PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{5336B120-B4C6-4D4D-B04F-AF55E1283C30}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill)\Create vETLFactVisits"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill)\Create pETLFillFactVisits" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill).PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{04D54520-BF25-44B6-9C15-0D32D04752F1}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill)\Create pETLFillFactVisits"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill)\Exec pETLFillFactVisits" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\ETL From OLTP Databases to DW Database\Sequence Container"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{27856DAE-7359-42CC-9BFA-E048624CDDF4}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Sequence Container">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Sequence Container\Create pETLAddForeignKeyConstraints"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a procedure to add Foreign Key Constraints back"
              DTS:DTSID="{212FE489-6EB7-47C6-AF59-204BEE815BE6}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create pETLAddForeignKeyConstraints"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'pETLAddForeignKeyConstraints')&#xA;   Drop Procedure pETLAddForeignKeyConstraints;&#xA;go&#xA;&#xA;Create Procedure pETLAddForeignKeyConstraints&#xA;/* Author: Wayne Wang&#xA;** Desc: Add FKs back to the tables&#xA;** Change Log: When,Who,What&#xA;** 2019-08-26, Wayne Wang, Created Procedure for Adding Foreign Key Constraints.&#xA;*/&#xA;AS&#xA; Begin&#xA;  Declare @RC int = 0;&#xA;  Begin Try&#xA;    -- ETL Processing Code --&#xA;&#x9;-- Drop the Foreign Key Constraints from FactDoctorShifts Table --&#xA;    Alter Table DWClinicReportData.dbo.FactDoctorShifts&#xA;&#x9;&#x9;Add Constraint fkFactDoctorShiftsToDimDates&#xA;&#x9;&#x9;Foreign Key (ShiftDateKey) References DimDates;&#xA;&#xA;&#x9;Alter Table DWClinicReportData.dbo.FactDoctorShifts&#xA;&#x9;&#x9;Add Constraint fkFactDoctorShiftsToDimClinics&#xA;&#x9;&#x9;Foreign Key (ClinicKey) References DimClinics;&#xA;&#xA;&#x9;Alter Table DWClinicReportData.dbo.FactDoctorShifts&#xA;&#x9;&#x9;Add Constraint fkFactDoctorShiftsToDimShifts&#xA;&#x9;&#x9;Foreign Key (ShiftKey) References DimShifts;&#xA;&#xA;&#x9;Alter Table DWClinicReportData.dbo.FactDoctorShifts&#xA;&#x9;&#x9;Add Constraint fkFactDoctorShiftsToDimDoctors&#xA;&#x9;&#x9;Foreign Key (DoctorKey) References DimDoctors;&#xA;&#x9;&#xA;&#x9;-- Drop the Foreign Key Constraints from FactVisits Table --&#xA;&#x9;Alter Table DWClinicReportData.dbo.FactVisits&#xA;&#x9;&#x9;Add Constraint fkFactVisitsToDimDates&#xA;&#x9;&#x9;Foreign Key (DateKey) References DimDates;&#xA;&#xA;&#x9;Alter Table DWClinicReportData.dbo.FactVisits&#xA;&#x9;&#x9;Add Constraint fkFactVisitsToDimClinics&#xA;&#x9;&#x9;Foreign Key (ClinicKey) References DimClinics;&#xA;&#xA;&#x9;Alter Table DWClinicReportData.dbo.FactVisits&#xA;&#x9;&#x9;Add Constraint fkFactVisitsToDimPatients&#xA;&#x9;&#x9;Foreign Key (PatientKey) References DimPatients;&#xA;&#xA;&#x9;Alter Table DWClinicReportData.dbo.FactVisits&#xA;&#x9;&#x9;WITH NOCHECK&#xA;&#x9;&#x9;Add Constraint fkFactVisitsToDimDoctors&#xA;&#x9;&#x9;Foreign Key (DoctorKey) References DimDoctors;&#xA;&#xA;&#x9;Alter Table DWClinicReportData.dbo.FactVisits&#xA;&#x9;&#x9;Add Constraint fkFactVisitsToDimProcedures&#xA;&#x9;&#x9;Foreign Key (ProcedureKey) References DimProcedures;&#xA;   Set @RC = +1&#xA;  End Try&#xA;  Begin Catch&#xA;   Print Error_Message()&#xA;   Set @RC = -1&#xA;  End Catch&#xA;  Return @RC;&#xA; End&#xA;go" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Sequence Container\Exec pETLAddForeignKeyConstraints"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{87FB5576-2712-4A6E-80CD-9BB6AC55B1B3}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Exec pETLAddForeignKeyConstraints"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="EXEC pETLAddForeignKeyConstraints" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Sequence Container.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{AB0DCF5B-4FC4-424B-902C-6E80F24FD17E}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Sequence Container\Create pETLAddForeignKeyConstraints"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Sequence Container\Exec pETLAddForeignKeyConstraints" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\ETL From OLTP Databases to DW Database\Truncate All Tables in the DW Database"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{71354FBA-26C3-4EA9-A145-1F84A13273B3}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Truncate All Tables in the DW Database">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Truncate All Tables in the DW Database\Create pETLTruncateTables"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Create a procedure to truncate the Tables"
              DTS:DTSID="{59B8F755-662F-4B22-8120-1ADBB9E50CCB}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Create pETLTruncateTables"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="If Exists(Select * from Sys.objects where Name = 'pETLTruncateTables')&#xA;   Drop Procedure pETLTruncateTables;&#xA;go&#xA;&#xA;Create Procedure pETLTruncateTables&#xA;/* Author: Wayne Wang&#xA;** Desc: Flushes all date from the tables&#xA;** Change Log: When,Who,What&#xA;** 2019-08-26, Wayne Wang, Created Procedure for Truncating the tables&#xA;*/&#xA;AS&#xA; Begin&#xA;  Declare @RC int = 0;&#xA;  Begin Try&#xA;    -- ETL Processing Code --&#xA;    TRUNCATE TABLE DWClinicReportData.[dbo].[DimClinics];&#xA;&#x9;-- Truncate Table DimDates Table is optional because its data won't change very often&#xA;&#x9;TRUNCATE TABLE DWClinicReportData.[dbo].[DimDates];&#xA;&#x9;TRUNCATE TABLE DWClinicReportData.[dbo].[DimDoctors];&#xA;&#x9;TRUNCATE TABLE DWClinicReportData.[dbo].[DimPatients];&#xA;&#x9;TRUNCATE TABLE DWClinicReportData.[dbo].[DimProcedures];&#xA;&#x9;TRUNCATE TABLE DWClinicReportData.[dbo].[DimShifts];&#xA;&#x9;TRUNCATE TABLE DWClinicReportData.[dbo].[FactDoctorShifts];&#xA;&#x9;TRUNCATE TABLE DWClinicReportData.[dbo].[FactVisits];&#xA;   Set @RC = +1&#xA;  End Try&#xA;  Begin Catch&#xA;   Print Error_Message()&#xA;   Set @RC = -1&#xA;  End Catch&#xA;  Return @RC;&#xA; End&#xA;go" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Truncate All Tables in the DW Database\Exec pETLTruncateTables"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{D8DB566D-AFCC-451D-82B6-85FE55C4E7DA}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Exec pETLTruncateTables"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{470240CF-1150-41E6-87A3-12118C7D852E}"
                  SQLTask:SqlStatementSource="Exec pETLTruncateTables" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\ETL From OLTP Databases to DW Database\Truncate All Tables in the DW Database.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{597CE2E1-0340-4B90-8B2D-21535D3040E3}"
              DTS:From="Package\ETL From OLTP Databases to DW Database\Truncate All Tables in the DW Database\Create pETLTruncateTables"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\ETL From OLTP Databases to DW Database\Truncate All Tables in the DW Database\Exec pETLTruncateTables" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{C7E8553A-6F4E-4CFE-ABB3-937AABCF4B36}"
          DTS:From="Package\ETL From OLTP Databases to DW Database\Drop Foreign Key Constraints in Fact Tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\ETL From OLTP Databases to DW Database\Truncate All Tables in the DW Database" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{0B0EBE16-6899-40B9-97A9-3ADA778C9780}"
          DTS:From="Package\ETL From OLTP Databases to DW Database\Truncate All Tables in the DW Database"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{77959350-7C16-411B-9352-111C45D68BA5}"
          DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Date Table (Flush and Fill)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{E62E54E6-B8E5-4294-9BB1-59700C2B1473}"
          DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Date Table (Flush and Fill)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{C09544C1-E2F1-466C-93D8-EC9477ED42AA}"
          DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{C6BC6679-0F56-4BFB-A524-92640D6F841A}"
          DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{6603CFB0-21D3-4F9D-AE30-E37B9DFE444E}"
          DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{1C0D46C9-35ED-4436-8211-81E27678F2D3}"
          DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{0EE4AB14-336A-404C-A1C5-7B4E87DCF8FD}"
          DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 9]"
          DTS:CreationName=""
          DTS:DTSID="{3767AA2F-F7A5-47C3-BEE4-628DF620AB91}"
          DTS:From="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 9"
          DTS:To="Package\ETL From OLTP Databases to DW Database\Sequence Container" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{A4FE32A9-3245-4DB0-BAAE-6E8CA1939FE4}"
      DTS:From="Package\ETL From Flat Files to Patients DataBase"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\ETL From OLTP Databases to DW Database" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="279,42"
          Id="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB\Create pCreateOrTruncateStagingTables"
          TopLeft="28,6.5" />
        <NodeLayout
          Size="279,42"
          Id="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB\Create pETLCsvToStagingTables"
          TopLeft="28,143.5" />
        <NodeLayout
          Size="278,42"
          Id="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB\Execute  pCreateOrTruncateStagingTables"
          TopLeft="28,74.5" />
        <NodeLayout
          Size="279,42"
          Id="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB\Execute pETLCsvToStagingTables"
          TopLeft="28,212.5" />
        <EdgeLayout
          Id="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB.PrecedenceConstraints[Constraint]"
          TopLeft="167.25,48.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26"
              Start="0,0"
              End="0,18.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB.PrecedenceConstraints[Constraint 1]"
          TopLeft="167.25,116.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB.PrecedenceConstraints[Constraint 2]"
          TopLeft="167.5,185.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27"
              Start="0,0"
              End="0,19.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="350,310"
          Size="350,353"
          Id="Package\ETL From Flat Files to Patients DataBase\Import Data From Flat Files To Staging Tables in TempDB"
          TopLeft="5.50000000000003,5.5" />
        <NodeLayout
          Size="236,42"
          Id="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database\Create pETLSyncPatientNewVisits"
          TopLeft="38,78.75" />
        <NodeLayout
          Size="236,42"
          Id="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database\Create  vETLNewVisits"
          TopLeft="38,5.5" />
        <NodeLayout
          Size="236,42"
          Id="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database\Exec pETLSyncPatientNewVisits"
          TopLeft="38,152" />
        <EdgeLayout
          Id="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database.PrecedenceConstraints[Constraint]"
          TopLeft="156,47.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.25"
              Start="0,0"
              End="0,23.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database.PrecedenceConstraints[Constraint 1]"
          TopLeft="156,120.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.25"
              Start="0,0"
              End="0,23.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="332,309"
          Size="332,352"
          Id="Package\ETL From Flat Files to Patients DataBase\Import Data From Staging Tables to Patients Database"
          TopLeft="420.653846153846,5.5" />
        <EdgeLayout
          Id="Package\ETL From Flat Files to Patients DataBase.PrecedenceConstraints[Constraint]"
          TopLeft="355.5,181.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65.153846153846,0"
              Start="0,0"
              End="57.653846153846,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="57.653846153846,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="769,386"
          Size="769,429"
          Id="Package\ETL From Flat Files to Patients DataBase"
          TopLeft="63.8333333333334,564.75" />
        <NodeLayout
          Size="264,42"
          Id="Package\ETL From OLTP Databases to DW Database\Drop Foreign Key Constraints in Fact Tables\Create pETLDropForeignKeyConstraints"
          TopLeft="21.333333333333,14.6666666666667" />
        <NodeLayout
          Size="264,42"
          Id="Package\ETL From OLTP Databases to DW Database\Drop Foreign Key Constraints in Fact Tables\Exec pETLDropForeignKeyConstraints"
          TopLeft="21.333333333333,89.3333333333333" />
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Drop Foreign Key Constraints in Fact Tables.PrecedenceConstraints[Constraint]"
          TopLeft="153.333333333333,56.6666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.6666666666667"
              Start="0,0"
              End="0,25.1666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.1666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="308,159"
          Size="308,202"
          Id="Package\ETL From OLTP Databases to DW Database\Drop Foreign Key Constraints in Fact Tables"
          TopLeft="38.0555555555559,41" />
        <NodeLayout
          Size="197,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill)\Create vETLDimClinics"
          TopLeft="26.3333333333335,19.3333333333333" />
        <NodeLayout
          Size="197,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill)\Create pETLFillDimClinics"
          TopLeft="26.3333333333335,85.8888888888889" />
        <NodeLayout
          Size="197,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill)\Exec pETLFillDimClinics"
          TopLeft="26.3333333333335,152.444444444445" />
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill).PrecedenceConstraints[Constraint]"
          TopLeft="124.833333333333,61.3333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24.5555555555556"
              Start="0,0"
              End="0,17.0555555555556">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.0555555555556" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill).PrecedenceConstraints[Constraint 1]"
          TopLeft="124.833333333333,127.888888888889">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24.5555555555555"
              Start="0,0"
              End="0,17.0555555555555">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.0555555555555" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="283,230"
          Size="283,273"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Clinics Table (Flush and Fill)"
          TopLeft="729.870370370371,5.5" />
        <NodeLayout
          Size="209,42"
          Id="Package\ETL From OLTP Databases to DW Database\Truncate All Tables in the DW Database\Create pETLTruncateTables"
          TopLeft="22.6666666666667,12.3333333333333" />
        <NodeLayout
          Size="209,42"
          Id="Package\ETL From OLTP Databases to DW Database\Truncate All Tables in the DW Database\Exec pETLTruncateTables"
          TopLeft="22.6666666666667,77.6666666666666" />
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Truncate All Tables in the DW Database.PrecedenceConstraints[Constraint]"
          TopLeft="127.166666666667,54.3333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.3333333333334"
              Start="0,0"
              End="0,15.8333333333334">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.8333333333334" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="308,159"
          Size="308,202"
          Id="Package\ETL From OLTP Databases to DW Database\Truncate All Tables in the DW Database"
          TopLeft="383.962962962963,41" />
        <NodeLayout
          Size="200,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill)\Create vETLDimShifts"
          TopLeft="30,24.4444444444446" />
        <NodeLayout
          Size="200,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill)\Create  pETLFillDimShifts"
          TopLeft="28.8888888888887,89.7777777777778" />
        <NodeLayout
          Size="200,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill)\Exec pETLFillDimShifts"
          TopLeft="30,155.111111111111" />
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill).PrecedenceConstraints[Constraint]"
          TopLeft="129.444444444444,66.4444444444446">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.3333333333333"
              Start="0,0"
              End="0,15.8333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.8333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill).PrecedenceConstraints[Constraint 1]"
          TopLeft="129.444444444444,131.777777777778">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.3333333333333"
              Start="0,0"
              End="0,15.8333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.8333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="283,230"
          Size="283,273"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Shift Table (Flush and Fill)"
          TopLeft="1052.77777777778,377.465277777778" />
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint]"
          TopLeft="346.055555555556,142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37.9074074074074,0"
              Start="0,0"
              End="30.4074074074074,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.4074074074074,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 1]"
          TopLeft="691.962962962963,142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37.9074074074075,0"
              Start="0,0"
              End="30.4074074074075,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.4074074074075,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="194,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Date Table (Flush and Fill)\Create pETLFillDimDates"
          TopLeft="20.9999999999991,20.3333333333333" />
        <NodeLayout
          Size="194,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Date Table (Flush and Fill)\Exec pETLFillDimDates"
          TopLeft="20.9999999999991,93.4444444444443" />
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Date Table (Flush and Fill).PrecedenceConstraints[Constraint]"
          TopLeft="117.999999999999,62.3333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.1111111111111"
              Start="0,0"
              End="0,23.6111111111111">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.6111111111111" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="308,159"
          Size="308,202"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Date Table (Flush and Fill)"
          TopLeft="1050.77777777778,41" />
        <NodeLayout
          Size="226,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill)\Create vETLFactDoctorShifts"
          TopLeft="28.8888888888894,30" />
        <NodeLayout
          Size="226,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill)\Create pETLFillFactDoctorShifts"
          TopLeft="28.8888888888894,95.3333333333335" />
        <NodeLayout
          Size="226,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill)\Exec pETLFillFactDoctorShifts"
          TopLeft="28.8888888888894,160.666666666667" />
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill).PrecedenceConstraints[Constraint]"
          TopLeft="141.888888888889,72">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.3333333333335"
              Start="0,0"
              End="0,15.8333333333335">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.8333333333335" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill).PrecedenceConstraints[Constraint 1]"
          TopLeft="141.888888888889,137.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,23.3333333333333"
              Start="0,0"
              End="0,15.8333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.8333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="283,227"
          Size="283,270"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Fact DoctorShift Table (Flush and Fill)"
          TopLeft="38.0555555555559,762.025462962963" />
        <NodeLayout
          Size="193,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill)\Create vETLFactVisits"
          TopLeft="33.3333333333326,22.2222222222222" />
        <NodeLayout
          Size="193,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill)\Create pETLFillFactVisits"
          TopLeft="33.3333333333326,90.333333333333" />
        <NodeLayout
          Size="193,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill)\Exec pETLFillFactVisits"
          TopLeft="33.3333333333326,158.444444444444" />
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill).PrecedenceConstraints[Constraint]"
          TopLeft="129.833333333333,64.2222222222222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26.1111111111109"
              Start="0,0"
              End="0,18.6111111111109">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6111111111109" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill).PrecedenceConstraints[Constraint 1]"
          TopLeft="129.833333333333,132.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,26.1111111111111"
              Start="0,0"
              End="0,18.6111111111111">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.6111111111111" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="283,217"
          Size="283,260"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Fact Visits Table (Flush and Fill)"
          TopLeft="383.962962962963,767.025462962963" />
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 2]"
          TopLeft="1012.87037037037,142">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37.9074074074075,0"
              Start="0,0"
              End="30.4074074074075,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.4074074074075,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="217,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental)\Create vETLDimPatients"
          TopLeft="28.8888888888889,22.2222222222223" />
        <NodeLayout
          Size="217,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental)\Create pETLSyncDimPatients"
          TopLeft="28.8888888888889,92.0000000000001" />
        <NodeLayout
          Size="217,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental)\Exec pETLSyncDimPatients"
          TopLeft="28.8888888888889,162.888888888889" />
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental).PrecedenceConstraints[Constraint]"
          TopLeft="137.388888888889,64.2222222222223">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.7777777777778"
              Start="0,0"
              End="0,20.2777777777778">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.2777777777778" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental).PrecedenceConstraints[Constraint 1]"
          TopLeft="137.388888888889,134">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,28.888888888889"
              Start="0,0"
              End="0,21.388888888889">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.388888888889" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="283,230"
          Size="283,273"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Patients Table (Incremental)"
          TopLeft="385.962962962963,377.465277777778" />
        <NodeLayout
          Size="223,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill)\Create vETLDimProcedures"
          TopLeft="28.8888888888889,27.7777777777776" />
        <NodeLayout
          Size="223,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill)\Create pETLFillDimProcedures"
          TopLeft="28.8888888888889,96.9999999999995" />
        <NodeLayout
          Size="223,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill)\Exec pETLFillDimProcedures"
          TopLeft="28.8888888888889,166.222222222222" />
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill).PrecedenceConstraints[Constraint]"
          TopLeft="140.388888888889,69.7777777777776">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.2222222222219"
              Start="0,0"
              End="0,19.7222222222219">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.7222222222219" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill).PrecedenceConstraints[Constraint 1]"
          TopLeft="140.388888888889,139">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,27.2222222222222"
              Start="0,0"
              End="0,19.7222222222222">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.7222222222222" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="283,230"
          Size="283,273"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Procedure Table (Flush and Fill)"
          TopLeft="731.870370370371,377.465277777778" />
        <NodeLayout
          Size="211,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill)\Create vETLDimDoctors"
          TopLeft="28.444444444445,21" />
        <NodeLayout
          Size="204,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill)\Create pETLFillDimDoctors"
          TopLeft="28.444444444445,87.5555555555557" />
        <NodeLayout
          Size="211,42"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill)\Exec pETLFillDimDoctors"
          TopLeft="28.444444444445,154.111111111111" />
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill).PrecedenceConstraints[Constraint]"
          TopLeft="132.194444444445,63">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24.5555555555557"
              Start="0,0"
              End="0,17.0555555555557">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.0555555555557" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill).PrecedenceConstraints[Constraint 1]"
          TopLeft="132.194444444445,129.555555555556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24.5555555555555"
              Start="0,0"
              End="0,17.0555555555555">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.0555555555555" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="283,230"
          Size="283,273"
          Id="Package\ETL From OLTP Databases to DW Database\Fill Dimension Doctor Table (Flush and Fill)"
          TopLeft="40.0555555555559,377.465277777778" />
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 3]"
          TopLeft="1204.77777777778,243">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1023.22222222222,134.465277777778"
              Start="0,0"
              End="-1023.22222222222,126.965277777778">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.2326388888889" />
                  <mssgle:CubicBezierSegment
                    Point1="0,63.2326388888889"
                    Point2="0,67.2326388888889"
                    Point3="-4,67.2326388888889" />
                  <mssgle:LineSegment
                    End="-1019.22222222222,67.2326388888889" />
                  <mssgle:CubicBezierSegment
                    Point1="-1019.22222222222,67.2326388888889"
                    Point2="-1023.22222222222,67.2326388888889"
                    Point3="-1023.22222222222,71.2326388888889" />
                  <mssgle:LineSegment
                    End="-1023.22222222222,126.965277777778" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 4]"
          TopLeft="323.055555555556,513.965277777778">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="62.9074074074074,0"
              Start="0,0"
              End="55.4074074074074,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="55.4074074074074,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="259,42"
          Id="Package\ETL From OLTP Databases to DW Database\Sequence Container\Create pETLAddForeignKeyConstraints"
          TopLeft="9.66666666666697,17.2222222222222" />
        <NodeLayout
          Size="259,42"
          Id="Package\ETL From OLTP Databases to DW Database\Sequence Container\Exec pETLAddForeignKeyConstraints"
          TopLeft="9.66666666666697,88.3333333333335" />
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="139.166666666667,59.2222222222222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.1111111111113"
              Start="0,0"
              End="0,21.6111111111113">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.6111111111113" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="308,159"
          Size="308,202"
          Id="Package\ETL From OLTP Databases to DW Database\Sequence Container"
          TopLeft="729.870370370371,796.025462962963" />
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 5]"
          TopLeft="668.962962962963,513.965277777778">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="62.9074074074076,0"
              Start="0,0"
              End="55.4074074074076,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="55.4074074074076,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 6]"
          TopLeft="1014.87037037037,513.965277777778">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37.9074074074074,0"
              Start="0,0"
              End="30.4074074074074,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.4074074074074,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 7]"
          TopLeft="1194.27777777778,650.465277777778">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1014.72222222222,111.560185185185"
              Start="0,0"
              End="-1014.72222222222,104.060185185185">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.7800925925926" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51.7800925925926"
                    Point2="0,55.7800925925926"
                    Point3="-4,55.7800925925926" />
                  <mssgle:LineSegment
                    End="-1010.72222222222,55.7800925925926" />
                  <mssgle:CubicBezierSegment
                    Point1="-1010.72222222222,55.7800925925926"
                    Point2="-1014.72222222222,55.7800925925926"
                    Point3="-1014.72222222222,59.7800925925926" />
                  <mssgle:LineSegment
                    End="-1014.72222222222,104.060185185185" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 8]"
          TopLeft="321.055555555556,897.025462962963">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="62.9074074074074,0"
              Start="0,0"
              End="55.4074074074074,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="55.4074074074074,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\ETL From OLTP Databases to DW Database.PrecedenceConstraints[Constraint 9]"
          TopLeft="666.962962962963,897.025462962963">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="62.9074074074075,0"
              Start="0,0"
              End="55.4074074074075,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="55.4074074074075,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1397,1129"
          Size="1397,1172"
          Id="Package\ETL From OLTP Databases to DW Database"
          TopLeft="991.111111111112,193.25" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="832.833333333333,779.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="158.277777777778,0"
              Start="0,0"
              End="150.777777777778,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="150.777777777778,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>